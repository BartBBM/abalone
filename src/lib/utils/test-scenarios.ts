import type { Game } from '$lib/index';

export function _test_nearly_won(game: Game) {
	game.action(8, 2);
	game.reorder_board();
	game.action(6, 4);
	game.reorder_board();
	game.action(5, 5);
	game.reorder_board();
	game.action(0, 3);
	game.reorder_board();
	game.action(1, 4);
	game.reorder_board();
	game.action(2, 5);
	game.reorder_board();
	game.action(0, 4);
	game.reorder_board();
	game.action(7, 3);
	game.reorder_board();
	game.action(5, 5);
	game.reorder_board();
	game.action(4, 6);
	game.reorder_board();
	game.action(0, 4);
	game.reorder_board();
	game.action(1, 5);
	game.reorder_board();
	game.action(2, 6);
	game.reorder_board();
	game.action(8, 3);
	game.reorder_board();
	game.action(7, 4);
	game.reorder_board();
	game.action(6, 5);
	game.reorder_board();
	game.action(1, 4);
	game.reorder_board();
	game.action(2, 5);
	game.reorder_board();
	game.action(3, 6);
	game.reorder_board();
	game.action(6, 4);
	game.reorder_board();
	game.action(4, 6);
	game.reorder_board();
	game.action(3, 6);
	game.reorder_board();
	game.action(1, 2);
	game.reorder_board();
	game.action(1, 3);
	game.reorder_board();
	game.action(1, 4);
	game.reorder_board();
	game.action(5, 5);
	game.reorder_board();
	game.action(3, 6);
	game.reorder_board();
	game.action(2, 6);
	game.reorder_board();
	game.action(0, 2);
	game.reorder_board();
	game.action(0, 3);
	game.reorder_board();
	game.action(2, 6);
	game.reorder_board();
	game.action(4, 6);
	game.reorder_board();
	game.action(5, 5);
	game.reorder_board();
	game.action(1, 5);
	game.reorder_board();
	game.action(2, 6);
	game.reorder_board();
	game.action(5, 5);
	game.reorder_board();
	game.action(3, 6);
	game.reorder_board();
	game.action(2, 6);
	game.reorder_board();
	game.action(2, 4);
	game.reorder_board();
	game.action(2, 5);
	game.reorder_board();
	game.action(2, 6);
	game.reorder_board();
	game.action(4, 6);
	game.reorder_board();
	game.action(3, 6);
	game.reorder_board();
	game.action(2, 6);
	game.reorder_board();
	game.action(2, 5);
	game.reorder_board();
	game.action(1, 5);
	game.reorder_board();
	game.action(2, 6);
	game.reorder_board();
	game.action(3, 6);
	game.reorder_board();
	game.action(4, 6);
	game.reorder_board();
	game.action(1, 5);
	game.reorder_board();
	game.action(2, 6);
	game.reorder_board();
	// game would win
	// game.action(4, 6);
	// game.action(3, 6);
	// game.action(2, 6);
}

export function _test_first_nearly_out(game: Game) {
	game.action(8, 4);
	game.reorder_board();
	game.action(7, 5);
	game.reorder_board();
	game.action(6, 6);
	game.reorder_board();
	game.action(0, 4);
	game.reorder_board();
	game.action(1, 5);
	game.reorder_board();
	game.action(2, 6);
	game.reorder_board();
	game.action(7, 5);
	game.reorder_board();
	game.action(6, 6);
	game.reorder_board();
	game.action(5, 7);
	game.reorder_board();
	game.action(1, 5);
	game.reorder_board();
	game.action(2, 6);
	game.reorder_board();
	game.action(3, 7);
	game.reorder_board();
	game.action(6, 6);
	game.reorder_board();
	game.action(5, 7);
	game.reorder_board();
	game.action(4, 8);
	game.reorder_board();
	// next would push first out
	// game.action(2, 6);
	// game.action(3, 7);
	// game.action(4, 8);
}

export function _bug_test_kicking_a_cell_out(game: Game) {
	game.action(8, 2);
	game.reorder_board();
	game.action(6, 4);
	game.reorder_board();
	game.action(5, 5);
	game.reorder_board();
	game.action(0, 3);
	game.reorder_board();
	game.action(1, 4);
	game.reorder_board();
	game.action(2, 5);
	game.reorder_board();
	game.action(0, 4);
	game.reorder_board();
	game.action(7, 3);
	game.reorder_board();
	game.action(5, 5);
	game.reorder_board();
	game.action(4, 6);
	game.reorder_board();
	game.action(0, 4);
	game.reorder_board();
	game.action(1, 5);
	game.reorder_board();
	game.action(2, 6);
	game.reorder_board();
	game.action(8, 3);
	game.reorder_board();
	game.action(7, 4);
	game.reorder_board();
	game.action(6, 5);
	game.reorder_board();
	game.action(1, 4);
	game.reorder_board();
	game.action(2, 5);
	game.reorder_board();
	game.action(3, 6);
	game.reorder_board();
	game.action(6, 4);
	game.reorder_board();
	game.action(4, 6);
	game.reorder_board();
}

export function _bug_test_should_not_be_possible_for_a_cell_to_be_selectable_behind_an_enemy_marble(
	game: Game
) {
	game.action(8, 4);
	game.reorder_board();
	game.action(6, 4);
	game.reorder_board();
	game.action(5, 4);
	game.reorder_board();
	game.action(0, 0);
	game.reorder_board();
	game.action(2, 2);
	game.reorder_board();
	game.action(3, 3);
	game.reorder_board();
	game.action(7, 4);
	game.reorder_board();
	game.action(5, 4);
	game.reorder_board();
	game.action(4, 4);
	game.reorder_board();
	game.action(3, 3);
	game.reorder_board();
	game.action(3, 4);
	game.reorder_board();
	game.action(4, 4);
	game.reorder_board();
	game.action(3, 3);
	game.reorder_board();
	game.action(3, 4);
	game.reorder_board();
	game.action(4, 4);
	game.reorder_board();
	// this.action(5, 4);
}
